AWSTemplateFormatVersion: '2010-09-09'
Description: Provision a VPC with one Availability Zone, one public subnet, and
  one private subnet.

Parameters:
  VpcCidr:
    Type: String
    Default: 10.200.123.0/24
    Description: CIDR block for the VPC
  PublicSubnetCidr:
    Type: String
    Default: 10.200.123.0/25
    Description: CIDR block for the public subnet
  PrivateSubnetCidr:
    Type: String
    Default: 10.200.123.128/25
    Description: CIDR block for the private subnet
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
    Description: Availability Zone for resources
  MyIpCidr:
    Type: String
    Default: 0.0.0.0/0
    Description: Your public IP address in CIDR notation for SSH/RDP access

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-vpc"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-igw"

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnetCidr
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PublicSubnetAZ1"

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Ref AvailabilityZone
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-PrivateSubnetAZ1"

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Public-RT"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  AllowRdpSshSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: allow-rdp-ssh-login
      GroupDescription: Security group to allow RDP, SSH, and internal VPC traffic
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3389
          ToPort: 3389
          CidrIp: !Ref MyIpCidr
          Description: Allow RDP access from your specified IP
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIpCidr
          Description: Allow SSH access from your specified IP
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
          Description: Allow all traffic within the VPC
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-SG"

Outputs:
  VpcId:
    Description: ID of the created VPC
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"
  VpcCidr:
    Description: CIDR block of the VPC
    Value: !Ref VpcCidr
    Export:
      Name: !Sub "${AWS::StackName}-VpcCidr"
  PublicSubnetId:
    Description: ID of the public subnet
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PublicSubnetId"
  PrivateSubnetId:
    Description: ID of the private subnet
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PrivateSubnetId"
  SubnetCidrBlocks:
    Description: Comma-separated subnet CIDR blocks
    Value: !Join [ ',', [ !Ref PublicSubnetCidr, !Ref PrivateSubnetCidr ] ]
    Export:
      Name: !Sub "${AWS::StackName}-SubnetCidrBlocks"
  AvailabilityZone:
    Description: Availability Zone for subnets
    Value: !Ref AvailabilityZone
    Export:
      Name: !Sub "${AWS::StackName}-AvailabilityZone"
  DefaultSecurityGroupId:
    Description: ID of the VPC's default security group
    Value: !GetAtt VPC.DefaultSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-DefaultSecurityGroupId"
  AllowRdpSshSecurityGroupId:
    Description: ID of the allow-rdp-ssh-login security group
    Value: !Ref AllowRdpSshSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-AllowRdpSshSecurityGroupId"